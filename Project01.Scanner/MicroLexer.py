# Generated from Micro.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,9,174,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,1,0,1,0,1,1,1,1,1,2,4,2,
        29,8,2,11,2,12,2,30,1,3,5,3,34,8,3,10,3,12,3,37,9,3,1,3,1,3,4,3,
        41,8,3,11,3,12,3,42,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,128,8,4,1,5,1,5,5,5,132,8,5,
        10,5,12,5,135,9,5,1,6,1,6,1,7,1,7,5,7,141,8,7,10,7,12,7,144,9,7,
        1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,158,8,8,1,9,
        1,9,1,9,1,9,5,9,164,8,9,10,9,12,9,167,9,9,1,9,1,9,1,10,1,10,1,10,
        1,10,1,142,0,11,1,0,3,0,5,1,7,2,9,3,11,4,13,5,15,6,17,7,19,8,21,
        9,1,0,7,1,0,48,57,2,0,65,90,97,122,3,0,48,57,65,90,97,122,4,0,42,
        43,45,45,47,47,61,61,4,0,40,41,44,44,59,60,62,62,2,0,10,10,13,13,
        3,0,9,10,13,13,32,32,199,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,1,23,1,0,0,0,3,25,1,0,0,0,5,28,1,0,0,0,7,35,1,0,0,0,9,127,
        1,0,0,0,11,129,1,0,0,0,13,136,1,0,0,0,15,138,1,0,0,0,17,157,1,0,
        0,0,19,159,1,0,0,0,21,170,1,0,0,0,23,24,7,0,0,0,24,2,1,0,0,0,25,
        26,7,1,0,0,26,4,1,0,0,0,27,29,3,1,0,0,28,27,1,0,0,0,29,30,1,0,0,
        0,30,28,1,0,0,0,30,31,1,0,0,0,31,6,1,0,0,0,32,34,3,1,0,0,33,32,1,
        0,0,0,34,37,1,0,0,0,35,33,1,0,0,0,35,36,1,0,0,0,36,38,1,0,0,0,37,
        35,1,0,0,0,38,40,5,46,0,0,39,41,3,1,0,0,40,39,1,0,0,0,41,42,1,0,
        0,0,42,40,1,0,0,0,42,43,1,0,0,0,43,8,1,0,0,0,44,45,5,80,0,0,45,46,
        5,82,0,0,46,47,5,79,0,0,47,48,5,71,0,0,48,49,5,82,0,0,49,50,5,65,
        0,0,50,128,5,77,0,0,51,52,5,66,0,0,52,53,5,69,0,0,53,54,5,71,0,0,
        54,55,5,73,0,0,55,128,5,78,0,0,56,57,5,69,0,0,57,58,5,78,0,0,58,
        128,5,68,0,0,59,60,5,70,0,0,60,61,5,85,0,0,61,62,5,78,0,0,62,63,
        5,67,0,0,63,64,5,84,0,0,64,65,5,73,0,0,65,66,5,79,0,0,66,128,5,78,
        0,0,67,68,5,82,0,0,68,69,5,69,0,0,69,70,5,65,0,0,70,128,5,68,0,0,
        71,72,5,87,0,0,72,73,5,82,0,0,73,74,5,73,0,0,74,75,5,84,0,0,75,128,
        5,69,0,0,76,77,5,73,0,0,77,128,5,70,0,0,78,79,5,69,0,0,79,80,5,76,
        0,0,80,81,5,83,0,0,81,128,5,69,0,0,82,83,5,70,0,0,83,128,5,73,0,
        0,84,85,5,70,0,0,85,86,5,79,0,0,86,128,5,82,0,0,87,88,5,82,0,0,88,
        89,5,79,0,0,89,128,5,70,0,0,90,91,5,67,0,0,91,92,5,79,0,0,92,93,
        5,78,0,0,93,94,5,84,0,0,94,95,5,73,0,0,95,96,5,78,0,0,96,97,5,85,
        0,0,97,128,5,69,0,0,98,99,5,66,0,0,99,100,5,82,0,0,100,101,5,69,
        0,0,101,102,5,65,0,0,102,128,5,75,0,0,103,104,5,82,0,0,104,105,5,
        69,0,0,105,106,5,84,0,0,106,107,5,85,0,0,107,108,5,82,0,0,108,128,
        5,78,0,0,109,110,5,73,0,0,110,111,5,78,0,0,111,128,5,84,0,0,112,
        113,5,86,0,0,113,114,5,79,0,0,114,115,5,73,0,0,115,128,5,68,0,0,
        116,117,5,83,0,0,117,118,5,84,0,0,118,119,5,82,0,0,119,120,5,73,
        0,0,120,121,5,78,0,0,121,128,5,71,0,0,122,123,5,70,0,0,123,124,5,
        76,0,0,124,125,5,79,0,0,125,126,5,65,0,0,126,128,5,84,0,0,127,44,
        1,0,0,0,127,51,1,0,0,0,127,56,1,0,0,0,127,59,1,0,0,0,127,67,1,0,
        0,0,127,71,1,0,0,0,127,76,1,0,0,0,127,78,1,0,0,0,127,82,1,0,0,0,
        127,84,1,0,0,0,127,87,1,0,0,0,127,90,1,0,0,0,127,98,1,0,0,0,127,
        103,1,0,0,0,127,109,1,0,0,0,127,112,1,0,0,0,127,116,1,0,0,0,127,
        122,1,0,0,0,128,10,1,0,0,0,129,133,3,3,1,0,130,132,7,2,0,0,131,130,
        1,0,0,0,132,135,1,0,0,0,133,131,1,0,0,0,133,134,1,0,0,0,134,12,1,
        0,0,0,135,133,1,0,0,0,136,137,5,34,0,0,137,14,1,0,0,0,138,142,3,
        13,6,0,139,141,9,0,0,0,140,139,1,0,0,0,141,144,1,0,0,0,142,143,1,
        0,0,0,142,140,1,0,0,0,143,145,1,0,0,0,144,142,1,0,0,0,145,146,3,
        13,6,0,146,16,1,0,0,0,147,148,5,58,0,0,148,158,5,61,0,0,149,158,
        7,3,0,0,150,151,5,33,0,0,151,158,5,61,0,0,152,158,7,4,0,0,153,154,
        5,60,0,0,154,158,5,61,0,0,155,156,5,62,0,0,156,158,5,61,0,0,157,
        147,1,0,0,0,157,149,1,0,0,0,157,150,1,0,0,0,157,152,1,0,0,0,157,
        153,1,0,0,0,157,155,1,0,0,0,158,18,1,0,0,0,159,160,5,45,0,0,160,
        161,5,45,0,0,161,165,1,0,0,0,162,164,8,5,0,0,163,162,1,0,0,0,164,
        167,1,0,0,0,165,163,1,0,0,0,165,166,1,0,0,0,166,168,1,0,0,0,167,
        165,1,0,0,0,168,169,6,9,0,0,169,20,1,0,0,0,170,171,7,6,0,0,171,172,
        1,0,0,0,172,173,6,10,0,0,173,22,1,0,0,0,9,0,30,35,42,127,133,142,
        157,165,1,6,0,0
    ]

class MicroLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    INTLITERAL = 1
    FLOATLITERAL = 2
    KEYWORD = 3
    IDENTIFIER = 4
    QUOTE = 5
    STRINGLITERAL = 6
    OPERATOR = 7
    COMMENT = 8
    WS = 9

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'\"'" ]

    symbolicNames = [ "<INVALID>",
            "INTLITERAL", "FLOATLITERAL", "KEYWORD", "IDENTIFIER", "QUOTE", 
            "STRINGLITERAL", "OPERATOR", "COMMENT", "WS" ]

    ruleNames = [ "DIGIT", "LETTER", "INTLITERAL", "FLOATLITERAL", "KEYWORD", 
                  "IDENTIFIER", "QUOTE", "STRINGLITERAL", "OPERATOR", "COMMENT", 
                  "WS" ]

    grammarFileName = "Micro.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


